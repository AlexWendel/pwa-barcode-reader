function t(t,e,o,i){Object.defineProperty(t,e,{get:o,set:i,enumerable:!0,configurable:!0})}var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},o={},i={},n=e.parcelRequirea202;null==n&&((n=function(t){if(t in o)return o[t].exports;if(t in i){var e=i[t];delete i[t];var n={id:t,exports:{}};return o[t]=n,e.call(n.exports,n,n.exports),n.exports}var s=Error("Cannot find module '"+t+"'");throw s.code="MODULE_NOT_FOUND",s}).register=function(t,e){i[t]=e},e.parcelRequirea202=n);var s=n.register;s("gTLMZ",function(e,o){t(e.exports,"default",function(){return s});var i=n("7kGMO"),s=class{constructor(t,e){this.url=t,this.roomId=e,this.clientId=(0,i.getDeviceUUID)(),this.websocket=null,this.onStatusChange=()=>{},this.retryCount=0,this.maxRetries=10}connect(){if(!this.url||!this.roomId)return void this.onStatusChange("error","Missing URL or Room ID.");this.websocket=new WebSocket(this.url),this.websocket.onopen=()=>{this.onStatusChange("authenticating"),this.retryCount=0;let t={type:"auth",payload:{client_id:this.clientId,client_type:"LEITOR"}};this.websocket.send(JSON.stringify(t));let e={type:"join",payload:{room_id:this.roomId}};this.websocket.send(JSON.stringify(e))},this.websocket.onmessage=t=>{let e=JSON.parse(t.data);if(console.log(e),"joined_room"===e.type)return void this.onStatusChange("connected");if("error"===e.type){this.onStatusChange("error",e.payload.message),this.disconnect();return}this.onStatusChange("joining");let o={type:"join",payload:{room_id:this.roomId}};this.websocket.send(JSON.stringify(o))},this.websocket.onclose=()=>{this.retryCount<this.maxRetries?(this.retryCount++,this.onStatusChange("reconnecting"),setTimeout(()=>{this.connect()},1e3*Math.pow(2,this.retryCount))):this.onStatusChange("error",`Failed to connect to WebSocket after ${this.maxRetries} attempts.`)},this.websocket.onerror=()=>{this.onStatusChange("error","WebSocket error")}}disconnect(){this.websocket&&this.websocket.close()}sendData(t){this.websocket&&this.websocket.readyState===WebSocket.OPEN?this.websocket.send(JSON.stringify({type:"code",payload:{data:t}})):Error("WebSocket is not open.")}}}),s("7kGMO",function(e,o){t(e.exports,"getDeviceUUID",function(){return i});function i(){let t=navigator.userAgent,e="WebDevice";return/Windows/.test(t)?e="Windows":/Mac/.test(t)?e="Mac":/Linux/.test(t)?e="Linux":/Android/.test(t)?e="Android":/iPhone|iPad|iPod/.test(t)&&(e="iOS"),/Chrome/.test(t)?e+="-Chrome":/Firefox/.test(t)?e+="-Firefox":/Safari/.test(t)&&!/Chrome/.test(t)&&(e+="-Safari"),e+="-"+Math.floor(1e3*Math.random())}}),n("gTLMZ");
//# sourceMappingURL=barcode-scanner-main.7bd5bb84.js.map
